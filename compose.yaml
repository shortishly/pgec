---
services:
  grafana:
    image:
      grafana/grafana:${GRAFANA_VERSION:-10.1.5}
    ports:
      - 3000:3000
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_HIDE_VERSION: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/dashboards/home.json
      GF_LIVE_ALLOWED_ORIGINS: "https://*.preview.app.github.dev"
    volumes:
      - type: bind
        source: example/grafana/provisioning
        target: /etc/grafana/provisioning
      - type: bind
        source: example/grafana/dashboards
        target: /etc/dashboards
      - grafana:/var/lib/grafana
    pull_policy:
      ${PULL_POLICY:-missing}
  prometheus:
    image:
      prom/prometheus:${PROMETHEUS_VERSION:-v2.47.2}
    ports:
      - 9090:9090
    configs:
      - source: prometheus_yml
        target: /etc/prometheus/prometheus.yml
    pull_policy:
      ${PULL_POLICY:-missing}
  db:
    image:
      ${POSTGRES_IMAGE:-postgres:${POSTGRES_VERSION:-16.1}}
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      -c wal_level=logical
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
      - ./example/initdb.d/:/docker-entrypoint-initdb.d/
      - ./example/data:/mnt
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 5
    pull_policy:
      ${PULL_POLICY:-missing}
  load-generator:
    image:
      postgres:${POSTGRES_VERSION:-16.1}
    environment:
      PGPASSWORD: postgres
    command:
      /bin/randload
    volumes:
      - type: bind
        source: example/randload
        target: /bin/randload
    links:
      - db
    pull_policy:
      ${PULL_POLICY:-missing}
  pgec:
    image:
      ${PGEC_IMAGE:-ghcr.io/shortishly/pgec:${PGEC_VERSION:-latest}}
    environment:
      PGMP_DATABASE_HOSTNAME: db
      PGMP_DATABASE_PASSWORD: postgres
      PGMP_DATABASE_USER: postgres
      PGMP_REPLICATION_LOGICAL_PUBLICATION_NAMES: pub
      PGMP_SOCKET_TRACE: false
      METRICS_COLLECT_TIMEOUT: 5000
    ports:
      - 8080:80
      - 6379:6379
      - 9100:9100
      - 11211:11211
    links:
      - db
    pull_policy:
      ${PULL_POLICY:-always}
configs:
  prometheus_yml:
    file: example/prometheus.yml
volumes:
  db:
    driver: local
  grafana:
    driver: local
