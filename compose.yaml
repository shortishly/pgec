---
services:
  prometheus:
    image:
      prom/prometheus:${PROMETHEUS_VERSION:-latest}
    ports:
      - 9090:9090
    configs:
      - source: prometheus_yml
        target: /etc/prometheus/prometheus.yml
    pull_policy:
      always
    profiles:
      - monitoring
      - all
  postgres:
    image:
      postgres:${POSTGRES_VERSION:-15}
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      -c wal_level=logical
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
      - type: bind
        source: example/initdb.d/
        target: /docker-entrypoint-initdb.d/
      - type: bind
        source: example/data
        target: /mnt
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 5
    pull_policy:
      always
    profiles:
      - db
      - all
  erlang:
    image:
      erlang:${ERLANG_VERSION:-25.2}
    command:
      /bin/sh -c "while sleep 1000; do :; done"
    profiles:
      - debug
  pgec:
    image:
      ghcr.io/shortishly/pgec:${PGEC_VERSION:-latest}
    environment:
      PGMP_DATABASE_HOSTNAME: postgres
      PGMP_DATABASE_PASSWORD: postgres
      PGMP_DATABASE_USER: postgres
      PGMP_PGMP_INT_SUP_RESTART_INTENSITY: 60
      PGMP_PGMP_INT_SUP_RESTART_PERIOD: 1
      PGMP_PGMP_REP_LOG_STREAM_SUP_RESTART_INTENSITY: 60
      PGMP_PGMP_REP_LOG_STREAM_SUP_RESTART_PERIOD: 1
      PGMP_REPLICATION_LOGICAL_PUBLICATION_NAMES: pub
      PGMP_SOCKET_TRACE: false
    ports:
      - 8080:80
      - 9100:9100
      - 11211:11211
    links:
      - postgres
    pull_policy:
      always
    profiles:
      - cache
      - all
configs:
  prometheus_yml:
    file: example/prometheus.yml
volumes:
  db:
    driver: local
