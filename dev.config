%% -*- mode: erlang -*-
%% Copyright (c) 2022 Peter Morgan <peter.james.morgan@gmail.com>
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%% http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

[{kernel, [{logger_level, notice},
           {logger,
            [{module_level,
              debug,
              [pgec_resp_emulator,
               telemetry,
               pgec_h]},

             {module_level,
              info,
              [pgec_telemetry_metrics,
               pgec_telemetry_mcd_metrics,
               pgec_telemetry_resp_metrics,
               pgec_telemetry_pgmp_metrics]},

             {module_level, notice, [supervisor_bridge,
                                     supervisor]},

             {module_level, emergency, [application_controller]},

             {handler,
              default,
              logger_std_h,
              #{formatter => {logger_formatter,
                              #{template => [[logger_formatter, header],
                                             {pid, [" ", pid, ""], ""},
                                             {mfa, [" ", mfa, ":", line], ""},
                                             "\n",
                                             msg,
                                             "\n"],
                                legacy_header => true,
                                single_line => false}}}}]}]},

 {metrics, [{http_enabled, true},
            {metrics_observations_sup_enabled, true}]},

 {pgmp, [{telemetry_module, pgec_telemetry_pgmp_metrics},
         {telemetry_function, handle},

         %% {socket_trace, true},
         %% {mm_trace, true},
         %% {rep_log_ets_trace, true},

         {pgmp_rep_log_sup_restart_intensity, 60},
         {pgmp_rep_log_sup_restart_period, 1},
         {pgmp_rep_log_stream_sup_restart_intensity, 60},
         {pgmp_rep_log_stream_sup_restart_period, 1},

         {database_hostname, "localhost"},
         {database_user, "postgres"},
         {database_password, "postgres"},

         {codec_jsonb, jsx},
         {codec_json, jsx}]},

 {mcd, [{protocol_callback, pgec_mcd_emulator},

        {telemetry_module, pgec_telemetry_mcd_metrics},
        {telemetry_function, handle}]},

 {resp, [{protocol_callback, pgec_resp_emulator},
         {telemetry_module, pgec_telemetry_resp_metrics},
         {telemetry_function, handle},
         {listener_enabled, true}]},

 {pgec, [{telemetry_module, pgec_telemetry_metrics},
         {telemetry_function, handle},

         %% {table_metadata_trace, true},

         {http_port, 8080}]}].
